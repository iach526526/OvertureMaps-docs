"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[2177],{561:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var a=n(74848),o=n(28453);const t={title:"\u571f\u5730\u690d\u88ab\u72c0\u6cc1\u5373\u6642\u66f4\u65b0"},s=void 0,l={permalink:"/zh-Hant/blog/2024/05/16/land-cover",source:"@site/i18n/zh-Hant/docusaurus-plugin-content-blog/2024-05-16-land-cover.mdx",title:"\u571f\u5730\u690d\u88ab\u72c0\u6cc1\u5373\u6642\u66f4\u65b0",description:"land cover gif",date:"2024-05-16T00:00:00.000Z",tags:[],readingTime:3.105,hasTruncateMarker:!1,authors:[],frontMatter:{title:"\u571f\u5730\u690d\u88ab\u72c0\u6cc1\u5373\u6642\u66f4\u65b0"},unlisted:!1,prevItem:{title:"\u4e0d\u9700\u8981 SQL \u5c31\u53ef\u4ee5\u63a2\u7d22 Overture \u8cc7\u6599",permalink:"/zh-Hant/blog/2024/07/24/explore-site"},nextItem:{title:"\u63a2\u7d22\u6211\u5011\u7684\u516c\u958b\u6e2c\u8a66\u7248",permalink:"/zh-Hant/blog/2024/04/22/beta-release"}},d={authorsImageUrls:[]},c=[{value:"\u88fd\u5716\u5e2b\u5011\u7684\u798f\u97f3\uff01",id:"\u88fd\u5716\u5e2b\u5011\u7684\u798f\u97f3",level:2},{value:"\u63a2\u7d22\u571f\u5730\u690d\u88ab",id:"\u63a2\u7d22\u571f\u5730\u690d\u88ab",level:2}];function p(e){const r={a:"a",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.p,{children:(0,a.jsx)(r.img,{alt:"land cover gif",src:n(31127).A+"",width:"1359",height:"580"})}),"\n",(0,a.jsx)(r.h2,{id:"\u88fd\u5716\u5e2b\u5011\u7684\u798f\u97f3",children:"\u88fd\u5716\u5e2b\u5011\u7684\u798f\u97f3\uff01"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.a,{href:"https://docs.overturemaps.org/release/latest",children:"Overture Maps \u7684 5 \u6708\u767c\u4f48"})," \u5305\u62ec\u4e86\u65b0\u7684\u9ad8\u89e3\u6790\u5ea6\u571f\u5730\u690d\u88ab\u8cc7\u6599",(0,a.jsx)(r.em,{children:"\u4ee5\u53ca"}),"\u65b0\u7684\u88fd\u5716\u67b6\u69cb\u5c6c\u6027\u3002"]}),"\n",(0,a.jsxs)(r.p,{children:["\u6211\u5011\u7684 ",(0,a.jsx)(r.code,{children:"land_cover"})," \u5716\u5c64\u662f\u5f9e",(0,a.jsx)(r.a,{href:"https://esa-worldcover.org/en",children:"\u6b50\u6d32\u592a\u7a7a\u7e3d\u7f72 2020 \u5e74 WorldCover (10m) \u5149\u67f5\u8cc7\u6599"}),"\u884d\u751f\u7684\u5411\u91cf\u8cc7\u6599\u3002\u5b83\u985e\u4f3c\u65bc ",(0,a.jsx)(r.a,{href:"https://daylightmap.org/2023/10/11/landcover.html",children:"Daylight"})," \u5730\u5716\u5206\u767c\u4e2d\u7684\u571f\u5730\u690d\u88ab\u5c64\uff0c\u4f46 Overture Maps \u6dfb\u52a0\u4e86\u66f4\u9ad8\u89e3\u6790\u5ea6\u7684\u8cc7\u6599\uff08\u7e2e\u653e\u7d1a\u5225 15\uff09\uff0c\u63d0\u4f9b\u4e86\u66f4\u591a\u7d30\u7bc0\u548c\u571f\u5730\u690d\u88ab\u985e\u5225\u3002\u65b0\u7684\u8cc7\u6599\u4e2d\u5305\u542b 10 \u7a2e\u5b50\u985e\u578b\uff1a\u96ea\u5730\u3001\u68ee\u6797\u3001\u57ce\u5e02\u3001\u8349\u5730\u3001\u8fb2\u4f5c\u7269\u3001\u8352\u6f20\u3001\u6fd5\u5730\u3001\u82d4\u861a\u3001\u7d05\u6a39\u6797\u548c\u704c\u6728\u3002"]}),"\n",(0,a.jsxs)(r.p,{children:["\u6211\u5011\u7684 5 \u6708\u767c\u4f48\u9084\u5305\u62ec\u4e86",(0,a.jsx)(r.a,{href:"https://docs.overturemaps.org/schema/reference/base/land_cover/",children:"\u67b6\u69cb\u5c6c\u6027"}),"\uff0c\u70ba\u88fd\u5716\u6642\u6700\u4f73\u4f7f\u7528 Overture Maps \u8cc7\u6599\u63d0\u4f9b\u88fd\u5716\u201c\u63d0\u793a\u201d\u3002\u6211\u5011\u6dfb\u52a0\u4e86 ",(0,a.jsx)(r.code,{children:"min_zoom"})," \u548c ",(0,a.jsx)(r.code,{children:"max_zoom"}),"\uff0c\u4ee5\u4f7f\u7528\u5e38\u898b\u7684\u201c\u6ed1\u52d5\u5730\u5716\u201d\u7e2e\u653e\u7d1a\u5225\u898f\u7bc4\u4f86\u5b9a\u7fa9\u6bcf\u500b\u89e3\u6790\u5ea6\u571f\u5730\u690d\u88ab\u7684\u63a8\u85a6\u7e2e\u653e\u7d1a\u5225\u3002\u9019\u662f\u6539\u5584\u88fd\u5716\u5e2b\u4f7f\u7528\u8005\u9ad4\u9a57\u7684\u7b2c\u4e00\u6b65\uff0c\u6211\u5011\u8a08\u5283\u5728\u672a\u4f86\u7684 Overture Maps \u8cc7\u6599\u767c\u4f48\u4e2d\u64f4\u5c55\u9019\u4e9b\u5c6c\u6027\u3002"]}),"\n",(0,a.jsx)(r.h2,{id:"\u63a2\u7d22\u571f\u5730\u690d\u88ab",children:"\u63a2\u7d22\u571f\u5730\u690d\u88ab"}),"\n",(0,a.jsxs)(r.p,{children:["\u5728\u4e0b\u9762\u7684\u7bc4\u4f8b\u4e2d\uff0c\u5c07\u5c55\u793a\u5982\u4f55\u4f7f\u7528 ",(0,a.jsx)(r.a,{href:"https://developmentseed.org/lonboard/latest/",children:"lonboard"})," \u548c ",(0,a.jsx)(r.a,{href:"https://github.com/OvertureMaps/overturemaps-py",children:"Overture Maps Python Command-line Tool"})," \u63d0\u53d6\u3001\u8655\u7406\u548c\u8996\u89ba\u5316\u611f\u8208\u8da3\u5340\u57df\u7684\u571f\u5730\u690d\u88ab\u8cc7\u6599\u3002\u6211\u5011\u5efa\u8b70\u60a8\u67e5\u95b1 lonboard \u6587\u6a94\u4e2d\u7684",(0,a.jsx)(r.a,{href:"https://developmentseed.org/lonboard/latest/examples/overture-maps/",children:"\u9019\u500b\u7bc4\u4f8b"}),"\uff0c\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6b64\u8655\u4f7f\u7528\u7684\u65b9\u6cd5\u3002\u60a8\u53ef\u4ee5\u5728 ",(0,a.jsx)(r.a,{href:"https://notebooksharing.space/view/b63f6b3dda1da99c45caf53284fbc508aaae0a43480b43bb0316db636c5e6677",children:"Notebook Sharing Space"})," \u67e5\u770b\u548c\u4e0b\u8f09\u5b8c\u6574\u7684 Jupyter Notebook\u3002"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.img,{alt:"land cover",src:n(5257).A+"",width:"2841",height:"767"})}),"\n",(0,a.jsxs)(r.p,{children:["\u8981\u8ddf\u96a8\u9019\u4e9b\u6b65\u9a5f\uff0c\u60a8\u9700\u8981\u57f7\u884c ",(0,a.jsx)(r.a,{href:"https://jupyter.org/",children:"JupyterLab \u6216 Jupyter Notebook"})," \u4e26\u5b89\u88dd\u4ee5\u4e0b\u5fc5\u8981\u5957\u4ef6\uff1a"]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"https://developmentseed.org/lonboard/latest/#install",children:"lonboard"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"https://github.com/OvertureMaps/overturemaps-py",children:"overturemaps-py"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"https://pandas.pydata.org/",children:"pandas"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"https://geopandas.org/en/stable/index.html",children:"GeoPandas"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"https://shapely.readthedocs.io/en/stable/index.html",children:"Shapely"})}),"\n"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:"import pandas as pd\r\nimport geopandas as gpd\r\nimport overturemaps \r\nfrom shapely import wkb\r\nfrom lonboard import Map, PolygonLayer\r\nfrom lonboard.colormap import apply_categorical_cmap\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:"# specify bounding box\r\nbbox =  -78.6429, 39.463, -73.7806, 41.6242\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:'# read in Overture Maps land_cover data type\r\ntable = overturemaps.record_batch_reader("land_cover", bbox).read_all()\r\ntable = table.combine_chunks()\n'})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:"# convert to dataframe\r\ndf = table.to_pandas()\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:"# filter for higher resolution land_cover features\r\ndf_h = df[df.cartography.apply(lambda x: x['min_zoom'] == 8)]\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:'# create color map for land_cover subtypes, loosely based on natural-color palette: https://www.shadedrelief.com/shelton/c.html\r\ncolor_map = {\r\n    "urban": [167, 162, 186],\r\n    "forest": [134, 178, 137],\r\n    "barren": [245, 237, 213],\r\n    "shrub": [239, 218, 182],\r\n    "grass": [254, 239, 173],\r\n    "crop": [222, 223, 154],\r\n    "wetland": [158, 207, 195], \r\n    "mangrove": [83, 171, 128],\r\n    "moss": [250, 230, 160],\r\n    "snow": [255, 255, 255],  \r\n}\n'})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:"# apply color map to land_cover subtypes\r\ncolors = apply_categorical_cmap(df_h.subtype, color_map)\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:"# dataframe to geodataframe, set crs\r\ngdf = gpd.GeoDataFrame(\r\n    df_h, \r\n    geometry=df_h['geometry'].apply(wkb.loads), \r\n    crs=\"EPSG:4326\"\r\n)\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:"# create map layer \r\nlayer = PolygonLayer.from_geopandas(\r\n    gdf= gdf[['id','subtype', 'cartography', 'geometry']].reset_index(drop=True),\r\n    get_fill_color=colors,\r\n    get_line_color=colors,\r\n)\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:'#render map\r\nview_state = {\r\n    "longitude": -76.2,\r\n    "latitude": 39.6,\r\n    "zoom": 8,\r\n    "pitch": 65,\r\n    "bearing": 5,\r\n}\r\nm = Map(layer, view_state=view_state)\r\nm\n'})})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},31127:(e,r,n)=>{n.d(r,{A:()=>a});const a=n.p+"assets/images/lc-c21dcecb5a1eb0a0b7ed5428f9c4f694.gif"},5257:(e,r,n)=>{n.d(r,{A:()=>a});const a=n.p+"assets/images/notebook-overture-lc-9b4cdc6573cb3433034dc8b5de8feb91.png"}}]);