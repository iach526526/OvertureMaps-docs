"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[292],{4650:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>f,contentTitle:()=>j,default:()=>S,frontMatter:()=>x,metadata:()=>b,toc:()=>E});var n=s(74848),t=s(28453),a=s(11470),l=s(19365),i=s(97577);const d="LOAD spatial;\r\nLOAD httpfs;\r\n-- Access the data on AWS in this example\r\nSET s3_region='us-west-2';\r\n\r\nCOPY (\r\nSELECT\r\n    *\r\nFROM read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=places/*/*'))\r\nTO 'places.parquet';",o="LOAD spatial;\r\nLOAD httpfs;\r\n-- Access the data on AWS in this example\r\nSET s3_region='us-west-2';\r\n\r\nCOPY (\r\n    SELECT\r\n       id,\r\n       version,\r\n    -- We are casting these columns to JSON in order to ensure compatibility with our GeoJSON output. \r\n    -- These conversions may be not necessary for other output formats.\r\n       CAST(names AS JSON) AS names,\r\n       CAST(categories AS JSON) AS categories,\r\n       confidence,\r\n       CAST(websites AS JSON) AS websites,\r\n       CAST(socials AS JSON) AS socials,\r\n       CAST(emails AS JSON) AS emails,\r\n       CAST(phones AS JSON) AS phones,\r\n       CAST(brand AS JSON) AS brand,\r\n       CAST(addresses AS JSON) AS addresses,\r\n       CAST(sources AS JSON) AS sources,\r\n       ST_GeomFromWKB(geometry)\r\nFROM read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=places/*/*')\r\nWHERE\r\n    -- Point geometry doesn't require looking at both min and max:\r\n      bbox.xmin BETWEEN 12.46 AND 12.48 AND\r\n      bbox.ymin BETWEEN 41.89 AND 41.91\r\n) TO 'rome_places.geojson' WITH (FORMAT GDAL, DRIVER 'GeoJSON', SRS 'EPSG:4326');\r\n",c="LOAD spatial;\r\nLOAD httpfs;\r\n-- Access the data on AWS in this example\r\nSET s3_region='us-west-2';\r\n\r\nCOPY (\r\n    SELECT\r\n-- we can parse addresses into columns to make further filtering of the data simpler\r\n    addresses[1].freeform as street,\r\n    addresses[1].locality as locality,\r\n    addresses[1].postcode as postcode,\r\n    addresses[1].region as region,\r\n    addresses[1].country as country,\r\n    *\r\nFROM read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=places/*/*')\r\nWHERE\r\n    addresses[1].country = 'LT'\r\n) TO 'lithuania_places.parquet';\r\n",u="LOAD spatial;\r\nLOAD httpfs;\r\n-- Access the data on AWS in this example\r\nSET s3_region='us-west-2';\r\n\r\nCOPY (\r\n    SELECT\r\n    names.primary as primary_name,\r\n    confidence,\r\n    addresses,\r\n    websites,\r\n    geometry\r\nFROM read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=places/*/*')\r\nWHERE\r\n    categories.primary IN ('flour_mill', 'rice_mill')\r\n) TO 'mills.parquet';\r\n",h="LOAD spatial;\r\nLOAD httpfs;\r\n-- Access the data on AWS in this example\r\nSET s3_region='us-west-2';\r\n\r\nCOPY (\r\n    SELECT\r\n    *\r\nFROM read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=places/*/*')\r\nWHERE\r\n-- Only select data with a confidence score above .95\r\n    confidence > .95\r\n-- Further filtering for data within Massachusetts to limit the size of this query\r\n    AND addresses[1].region = 'MA'\r\n) TO 'MA_high_confidence_places.parquet';\r\n",p="LOAD spatial;\r\nLOAD httpfs;\r\n-- Access the data on AWS in this example\r\nSET s3_region='us-west-2';\r\n\r\nCOPY (\r\n-- We'll first select OSM data from Oregon with amenity = restaurant\r\n    WITH osm AS (\r\n        SELECT kind,\r\n            id,\r\n            tags->>'name' AS name,\r\n            tags->>'addr:housenumber' AS housenumber,\r\n            tags->>'addr:street' AS street,\r\n            tags->>'addr:postcode' AS postcode,\r\n            tags->>'addr:city' AS city,\r\n            tags->>'website' AS website,\r\n            tags->>'phone' AS phone,\r\n            lat,\r\n            lon,\r\n            tags\r\n        FROM st_readosm(\r\n                'oregon-latest.osm.pbf'\r\n            )\r\n        WHERE tags->>'amenity' = 'restaurant'\r\n    ),\r\n-- Then select Overture data with any category containing the word restauarant in Oregon.\r\n    overture AS (\r\n        SELECT id,\r\n            names.primary AS \"names.primary\",\r\n            websites[1] AS website,\r\n            socials[1] AS social,\r\n            emails[1] AS email,\r\n            phones[1] AS phone,\r\n            addresses[1].freeform AS freeform,\r\n            addresses[1].locality AS locality,\r\n            addresses[1].postcode AS postcode,\r\n            addresses[1].region AS region,\r\n            addresses[1].country AS country,\r\n            ST_GeomFromWKB(geometry) AS geometry\r\n        FROM read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=places/*/*')\r\n        WHERE region = 'OR'\r\n            AND country = 'US'\r\n            AND categories.primary ilike '%restaurant%'\r\n    )\r\n-- Now that we have our input data we will join them together.\r\n    SELECT\r\n        -- With the GERS id joined to the final result this dataset can be quickly synced to future Overture releases\r\n        overture.id AS GERS_id,\r\n        osm.name,\r\n        -- Using CASE statements, we'll favor OSM data when it is present but use Overture data wherever there are gaps\r\n        CASE\r\n            WHEN osm.housenumber IS NOT NULL\r\n            OR osm.street IS NOT NULL THEN concat(osm.housenumber, ' ', osm.street)\r\n            ELSE overture.freeform\r\n        END AS address,\r\n        CASE\r\n            WHEN osm.city IS NOT NULL THEN osm.city\r\n            ELSE overture.locality\r\n        END AS city,\r\n        CASE\r\n            WHEN osm.postcode IS NOT NULL THEN osm.postcode\r\n            ELSE overture.postcode\r\n        END AS postcode,\r\n        CASE\r\n            WHEN osm.website IS NOT NULL THEN osm.website\r\n            ELSE overture.website\r\n        END AS website,\r\n        CASE\r\n            WHEN osm.phone IS NOT NULL THEN osm.phone\r\n            ELSE overture.phone\r\n        END AS phone,\r\n        overture.social,\r\n        overture.email,\r\n        ST_AsWKB(st_point(osm.lon, osm.lat)) AS geometry\r\n    FROM osm\r\n-- To join the data, we'll first match features that have the same OR similar names \r\n        LEFT JOIN overture ON (\r\n            osm.name = overture.\"names.primary\"\r\n            OR osm.name ilike concat('%', overture.\"names.primary\", '%')\r\n            OR overture.\"names.primary\" ilike concat('%', osm.name, '%')\r\n            OR damerau_levenshtein(osm.name, overture.\"names.primary\") < 3\r\n        )\r\n-- Then use a small buffer to match features that are nearby to each other\r\n        AND st_intersects(\r\n            st_buffer(overture.geometry::geometry, 0.003),\r\n            st_point(osm.lon, osm.lat)\r\n        )\r\n) TO 'oregon_restaurants_combined.parquet';",m="LOAD spatial;\r\nLOAD httpfs;\r\n-- Access the data on AWS in this example\r\nSET s3_region='us-west-2';\r\n\r\nCOPY (\r\n    -- First query places with address data in the area we are interested in\r\n    WITH places AS\r\n        (\r\n        SELECT * \r\n        FROM read_parquet('s3://overturemaps-us-west-2/release/2024-07-22.0/theme=places/*/*')\r\n        WHERE bbox.xmin BETWEEN 14.38 AND 14.44\r\n        AND bbox.ymin BETWEEN 50.07 AND 50.11\r\n        AND addresses[1].freeform IS NOT NULL\r\n        ),\r\n    -- Then get buildings in the same area\r\n    buildings as\r\n        (\r\n        SELECT * \r\n        FROM read_parquet('s3://overturemaps-us-west-2/release/2024-07-22.0/theme=buildings/type=building/*')\r\n        WHERE bbox.xmin > 14.38 AND bbox.xmax < 14.44\r\n        AND bbox.ymin > 50.07 AND bbox.ymax < 50.11\r\n        )\r\n    -- Join the data using an intersect and select distinct to avoid duplicates\r\n    SELECT distinct(buildings.id), buildings.*, places.addresses\r\n    FROM buildings\r\n    LEFT JOIN places on st_intersects(ST_GeomFromWKB(places.geometry), ST_GeomFromWKB(buildings.geometry))\r\n    ORDER BY buildings.id\r\n) TO 'prague_places_in_buildings.parquet';\r\n",x={title:"\u5730\u9ede"},j=void 0,b={id:"guides/places",title:"\u5730\u9ede",description:"\u672c\u6307\u5357\u5c08\u6ce8\u65bc Overture places \u8cc7\u6599 &mdash; \u5176\u5167\u5bb9\u3001\u7bc4\u570d\u3001\u5c6c\u6027\u548c\u4f7f\u7528\u6848\u4f8b\u3002\u82e5\u8981\u89e3\u66f4\u591a\u95dc\u65bc Overture places \u67b6\u69cb \u7684\u76f8\u95dc\u8cc7\u6599\uff0c\u8acb\u53c3\u898b \u67b6\u69cb\u53c3\u8003\u6587\u6a94\u3002",source:"@site/i18n/zh-Hant/docusaurus-plugin-content-docs/current/guides/places.mdx",sourceDirName:"guides",slug:"/guides/places",permalink:"/zh-Hant/guides/places",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1723800366e3,frontMatter:{title:"\u5730\u9ede"},sidebar:"docs",previous:{title:"\u5206\u5340",permalink:"/zh-Hant/guides/divisions"},next:{title:"\u4ea4\u901a\u904b\u8f38",permalink:"/zh-Hant/guides/transportation"}},f={},E=[{value:"\u6982\u8981",id:"\u6982\u8981",level:2},{value:"\u8cc7\u6599\u96c6\u63cf\u8ff0",id:"\u8cc7\u6599\u96c6\u63cf\u8ff0",level:2},{value:"\u8cc7\u6599\u7684\u5b58\u53d6\u548c\u6aa2\u7d22",id:"\u8cc7\u6599\u7684\u5b58\u53d6\u548c\u6aa2\u7d22",level:2},{value:"\u8cc7\u6599\u4f7f\u7528\u6307\u5357",id:"\u8cc7\u6599\u4f7f\u7528\u6307\u5357",level:2},{value:"\u8cc7\u6599\u64cd\u4f5c\u8207\u5206\u6790",id:"\u8cc7\u6599\u64cd\u4f5c\u8207\u5206\u6790",level:2},{value:"\u6309\u5c6c\u6027\u67e5\u8a62",id:"\u6309\u5c6c\u6027\u67e5\u8a62",level:3},{value:"\u9032\u968e\u7bc4\u4f8b",id:"\u9032\u968e\u7bc4\u4f8b",level:3},{value:"\u5957\u4ef6\u548c\u5de5\u5177",id:"\u5957\u4ef6\u548c\u5de5\u5177",level:2},{value:"Rapid",id:"rapid",level:3}];function v(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components},{Details:x}=r;return x||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsxs)(r.p,{children:["\u672c\u6307\u5357\u5c08\u6ce8\u65bc Overture places ",(0,n.jsx)(r.strong,{children:"\u8cc7\u6599"})," \u2014 \u5176\u5167\u5bb9\u3001\u7bc4\u570d\u3001\u5c6c\u6027\u548c\u4f7f\u7528\u6848\u4f8b\u3002\u82e5\u8981\u89e3\u66f4\u591a\u95dc\u65bc Overture places ",(0,n.jsx)(r.strong,{children:"\u67b6\u69cb"})," \u7684\u76f8\u95dc\u8cc7\u6599\uff0c\u8acb\u53c3\u898b ",(0,n.jsx)(r.a,{href:"/schema/reference/places/place",children:"\u67b6\u69cb\u53c3\u8003\u6587\u6a94"}),"\u3002"]})}),"\n",(0,n.jsx)(r.h2,{id:"\u6982\u8981",children:"\u6982\u8981"}),"\n",(0,n.jsxs)(r.p,{children:["Overture places \u4e3b\u984c\u6709\u4e00\u500b\u7279\u5fb5\u985e\u578b\uff0c\u7a31\u70ba ",(0,n.jsx)(r.code,{children:"place"}),"\uff0c\u5305\u542b\u8d85\u904e 5300 \u842c\u500b\u771f\u5be6\u4e16\u754c\u5be6\u9ad4\u7684\u9ede\u8868\u793a\uff1a\u5b78\u6821\u3001\u5546\u696d\u3001\u91ab\u9662\u3001\u5b97\u6559\u7d44\u7e54\u3001\u5730\u6a19\u3001\u5c71\u5cf0\u7b49\u3002\u8a72\u4e3b\u984c\u6e90\u65bc Meta \u548c Microsoft \u8cc7\u6599\u7684\u5408\u4f75\uff0c\u4e26\u5728 ",(0,n.jsx)(r.a,{href:"https://cdla.dev/permissive-2-0/",children:"CDLA Permissive 2.0"})," \u6388\u6b0a\u4e0b\u63d0\u4f9b\u3002"]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsx)(r.tr,{children:(0,n.jsx)(r.th,{style:{textAlign:"center"},children:(0,n.jsx)(r.img,{alt:"Overture places \u4e3b\u984c\u8986\u84cb\u7bc4\u570d",src:s(13460).A+"",width:"1728",height:"1138"})})})}),(0,n.jsx)(r.tbody,{children:(0,n.jsx)(r.tr,{children:(0,n.jsx)(r.td,{style:{textAlign:"center"},children:(0,n.jsx)(r.em,{children:"Overture places \u8cc7\u6599\uff0c\u6309\u8cc7\u6599\u4f86\u6e90\u6a23\u5f0f\uff1aMeta \u7528\u7d2b\u8272\uff0cMicrosoft \u7528\u6a59\u8272\u3002"})})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"\u4e3b\u8981\u4f86\u6e90"}),(0,n.jsx)(r.th,{children:"\u7279\u5fb5\u6578\u91cf\uff082024 \u5e74 7 \u6708\u7248\u672c\uff09"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Meta"}),(0,n.jsx)(r.td,{children:"\u7d04 4800 \u842c"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Microsoft"}),(0,n.jsx)(r.td,{children:"\u7d04 550 \u842c"})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"\u8cc7\u6599\u96c6\u63cf\u8ff0",children:"\u8cc7\u6599\u96c6\u63cf\u8ff0"}),"\n",(0,n.jsxs)(r.p,{children:["\u6240\u6709 Overture \u8cc7\u6599\uff0c\u5305\u62ec\u5730\u9ede\u8cc7\u6599\uff0c\u90fd\u4ee5 GeoParquet \u683c\u5f0f\u5206\u767c\uff0c\u9019\u662f\u4e00\u7a2e\u57fa\u65bc column-based \u7684\u8cc7\u6599\u7d50\u69cb\u3002\u4ee5\u4e0b\u662f\u5730\u9ede\u7279\u5fb5\u985e\u578b\u7684\u5c6c\u6027\u8868\u3002\u7279\u5225\u662f ",(0,n.jsx)(r.code,{children:"categories"})," \u5c6c\u6027\uff1b\u6211\u5011\u63d0\u4f9b\u4e86\u53ef\u7528\u985e\u5225\u7684\u5b8c\u6574\u5217\u8868 ",(0,n.jsx)(r.a,{href:"https://github.com/OvertureMaps/schema/blob/main/task-force-docs/places/overture_categories.csv",children:"\u5728\u9019\u88e1"}),"\u3002"]}),"\n",(0,n.jsxs)(x,{children:[(0,n.jsx)("summary",{children:"\u5730\u9ede\u4e3b\u984c\u4e2d GeoParquet \u6a94\u6848\u7684\u67b6\u69cb"}),(0,n.jsx)("div",{children:(0,n.jsx)(a.default,{children:(0,n.jsx)(l.default,{value:"places",label:"places",default:!0,children:(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"\u6b04\u4f4d"}),(0,n.jsx)(r.th,{children:"\u985e\u578b"}),(0,n.jsx)(r.th,{children:"\u63cf\u8ff0"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"id"}),(0,n.jsx)(r.td,{children:"VARCHAR"}),(0,n.jsx)(r.td,{children:"\u7279\u5fb5 ID\u3002\u5982\u679c\u8a72\u7279\u5fb5\u4ee3\u8868\u7684\u662f GERS\uff08\u5168\u7403\u5be6\u9ad4\u53c3\u8003\u7cfb\u7d71\uff09\u7684\u4e00\u90e8\u5206\uff0c\u5247\u6b64 ID \u53ef\u80fd\u8207 GERS \u95dc\u806f\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"geometry"}),(0,n.jsx)(r.td,{children:"BLOB"}),(0,n.jsx)(r.td,{children:"\u5730\u9ede\u4f4d\u7f6e\u7684\u9ede\u8868\u793a\u3002\u5730\u9ede\u7684\u5e7e\u4f55\u5f62\u72c0\u5fc5\u9808\u662f GeoJSON schema \u5b9a\u7fa9\u7684\u9ede\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"bbox"}),(0,n.jsx)(r.td,{children:"STRUCT"}),(0,n.jsx)(r.td,{children:"\u7531\u5169\u500b\u7d93\u5ea6\u548c\u5169\u500b\u7def\u5ea6\u5b9a\u7fa9\u7684\u5340\u57df\uff1a\u7def\u5ea6\u70ba -90.0 \u5230 90.0 \u4e4b\u9593\u7684\u5341\u9032\u5236\u6578\uff1b\u7d93\u5ea6\u70ba -180.0 \u5230 180.0 \u4e4b\u9593\u7684\u5341\u9032\u5236\u6578\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"version"}),(0,n.jsx)(r.td,{children:"INTEGER"}),(0,n.jsx)(r.td,{children:"\u7279\u5fb5\u7684\u7248\u672c\u865f\uff0c\u5728\u6bcf\u6b21 Overture \u7248\u672c\u66f4\u65b0\u4e2d\uff0c\u7576\u8a72\u7279\u5fb5\u7684\u5e7e\u4f55\u5f62\u72c0\u6216\u5c6c\u6027\u767c\u751f\u8b8a\u5316\u6642\uff0c\u7248\u672c\u865f\u6703\u905e\u589e\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sources"}),(0,n.jsx)(r.td,{children:"STRUCT"}),(0,n.jsx)(r.td,{children:"\u7d66\u5b9a\u7279\u5fb5\u5c6c\u6027\u7684\u6e90\u8a0a\u606f\u6578\u7d44\uff0c\u6bcf\u500b\u689d\u76ee\u90fd\u662f\u4e00\u500b\u6e90\u5c0d\u8c61\uff0c\u5217\u51fa\u4e86 JSON \u6307\u6a19\u7b26\u865f\u8868\u793a\u7684\u5c6c\u6027\u548c\u8a72\u7279\u5b9a\u503c\u4f86\u6e90\u7684\u8cc7\u6599\u96c6\u3002\u6240\u6709\u7279\u5fb5\u5fc5\u9808\u6709\u4e00\u500b\u6839\u7d1a\u5225\u7684\u6e90\uff0c\u9019\u662f\u9ed8\u8a8d\u6e90\uff0c\u5982\u679c\u672a\u6307\u5b9a\u7279\u5b9a\u5c6c\u6027\u7684\u6e90\uff0c\u5247\u4f7f\u7528\u6b64\u9ed8\u8a8d\u6e90\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"names"}),(0,n.jsx)(r.td,{children:"STRUCT"}),(0,n.jsx)(r.td,{children:"\u5b9a\u7fa9\u7279\u5fb5\u540d\u7a31\u7684\u5c6c\u6027\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"categories"}),(0,n.jsx)(r.td,{children:"STRUCT"}),(0,n.jsxs)(r.td,{children:["\u5730\u9ede\u7684\u985e\u5225\u3002\u5b8c\u6574\u5217\u8868\u53ef\u5728 GitHub \u4e0a\u627e\u5230\uff1a",(0,n.jsx)(r.a,{href:"https://github.com/OvertureMaps/schema/blob/main/task-force-docs/places/overture_categories.csv",children:"https://github.com/OvertureMaps/schema/blob/main/task-force-docs/places/overture_categories.csv"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"confidence"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{children:"\u5730\u9ede\u5b58\u5728\u7684\u4fe1\u5fc3\u7a0b\u5ea6\u3002\u6578\u503c\u7bc4\u570d\u662f 0 \u5230 1 \u4e4b\u9593\u30020 \u8868\u793a\u6211\u5011\u78ba\u5b9a\u8a72\u5730\u9ede\u4e0d\u5b58\u5728\uff08\u6216\u4e0d\u518d\u5b58\u5728\uff09\u30021 \u8868\u793a\u6211\u5011\u78ba\u5b9a\u8a72\u5730\u9ede\u5b58\u5728\u3002\u5982\u679c\u6c92\u6709\u4efb\u4f55\u503c\uff0c\u4ee3\u8868\u6211\u5011\u9084\u6c92\u6709\u4efb\u4f55\u53ef\u4fe1\u7684\u8a0a\u606f\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"websites"}),(0,n.jsx)(r.td,{children:"VARCHAR[]"}),(0,n.jsx)(r.td,{children:"\u5730\u9ede\u7684\u7db2\u7ad9\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"socials"}),(0,n.jsx)(r.td,{children:"VARCHAR[]"}),(0,n.jsx)(r.td,{children:"\u5730\u9ede\u7684\u793e\u4ea4\u5a92\u9ad4 URL\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"emails"}),(0,n.jsx)(r.td,{children:"VARCHAR[]"}),(0,n.jsx)(r.td,{children:"\u5730\u9ede\u7684\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"phones"}),(0,n.jsx)(r.td,{children:"VARCHAR[]"}),(0,n.jsx)(r.td,{children:"\u5730\u9ede\u7684\u96fb\u8a71\u865f\u78bc\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"brand"}),(0,n.jsx)(r.td,{children:"STRUCT"}),(0,n.jsx)(r.td,{children:"\u5730\u9ede\u7684\u54c1\u724c\u3002\u64c1\u6709\u591a\u500b\u54c1\u724c\u7684\u4f4d\u7f6e\u88ab\u5efa\u6a21\u70ba\u591a\u500b\u7368\u7acb\u7684\u5730\u9ede\uff0c\u6bcf\u500b\u5730\u9ede\u90fd\u6709\u81ea\u5df1\u7684\u54c1\u724c\u3002"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"addresses"}),(0,n.jsx)(r.td,{children:"STRUCT"}),(0,n.jsx)(r.td,{children:"\u5730\u9ede\u7684\u5730\u5740\u3002"})]})]})]})})})})]}),"\n",(0,n.jsx)(r.h2,{id:"\u8cc7\u6599\u7684\u5b58\u53d6\u548c\u6aa2\u7d22",children:"\u8cc7\u6599\u7684\u5b58\u53d6\u548c\u6aa2\u7d22"}),"\n",(0,n.jsx)(r.p,{children:"\u6700\u65b0\u7684\u5730\u9ede\u8cc7\u6599\u53ef\u4ee5\u5f9e AWS \u6216 Azure \u7372\u53d6\uff0c\u683c\u5f0f\u70ba GeoParquet\uff0c\u4f4d\u65bc\u4ee5\u4e0b\u4f4d\u7f6e\uff1a"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"\u4f9b\u61c9\u5546"}),(0,n.jsx)(r.th,{children:"\u4f4d\u7f6e"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Amazon S3"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(i.A,{query:"s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=places/type=place/",language:"text"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Azure Blob Storage"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(i.A,{query:"https://overturemapswestus2.blob.core.windows.net/release/__OVERTURE_RELEASE/theme=places/type=place/",language:"text"})})]})]})]}),"\n",(0,n.jsxs)(r.p,{children:["\u66f4\u591a\u8a0a\u606f\u53ef\u4ee5\u5728\u672c\u6587\u6a94\u7684 ",(0,n.jsx)(r.a,{href:"https://docs.overturemaps.org/getting-data/",children:"\u7372\u53d6 Overture \u8cc7\u6599"})," \u90e8\u5206\u627e\u5230\u3002\u60a8\u53ef\u4ee5\u76f4\u63a5\u5f9e\u4e0a\u8ff0 S3 \u6216 Azure \u4f4d\u7f6e\u4e0b\u8f09\u6574\u500b\u8cc7\u6599\u96c6\u3002\u8b66\u544a\uff1a\u8f38\u51fa\u5c07\u662f\u4e00\u500b\u975e\u5e38\u5927\u7684\u6a94\u6848\u3002"]}),"\n",(0,n.jsx)(r.p,{children:"\u6839\u64da\u60a8\u7684\u4f7f\u7528\u60c5\u6cc1\uff0c\u4ee5\u4e0b\u65b9\u6cd5\u53ef\u80fd\u66f4\u5be6\u7528\uff1a"}),"\n",(0,n.jsxs)(a.default,{children:[(0,n.jsxs)(l.default,{value:"Python Command-line Tool",label:"Python Command-line Tool",default:!0,children:[(0,n.jsxs)(r.p,{children:["\u9996\u5148\uff0c\u8acb\u9075\u5faa ",(0,n.jsx)(r.a,{href:"/getting-data/overturemaps-py/",children:"Python Command-line Tool \u7684\u8a2d\u5b9a\u6307\u5357"}),"\u3002"]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"overturemaps download -f geoparquet --type=place -o places.geoparquet\n"})})]}),(0,n.jsxs)(l.default,{value:"DuckDB",label:"DuckDB",default:!0,children:[(0,n.jsxs)(r.p,{children:["\u9996\u5148\uff0c\u8acb\u9075\u5faa ",(0,n.jsx)(r.a,{href:"/getting-data/duckdb/",children:"DuckDB \u7684\u8a2d\u5b9a\u6307\u5357"}),"\u3002"]}),(0,n.jsx)(i.A,{query:d})]})]}),"\n",(0,n.jsx)(r.h2,{id:"\u8cc7\u6599\u4f7f\u7528\u6307\u5357",children:"\u8cc7\u6599\u4f7f\u7528\u6307\u5357"}),"\n",(0,n.jsx)(r.p,{children:"\u6211\u5011\u5efa\u8b70\u50c5\u4e0b\u8f09\u60a8\u9700\u8981\u7684 Overture \u8cc7\u6599\u3002\u5982\u679c\u60a8\u5c0d\u7279\u5b9a\u7684\u5730\u7406\u5340\u57df\u611f\u8208\u8da3\uff0c\u6709\u5e7e\u7a2e\u9078\u64c7\u53ef\u4ee5\u4f7f\u7528\u7c21\u55ae\u7684 bounding box \u4f86\u63d0\u53d6\u5730\u9ede\u8cc7\u6599\u4e26\u8f38\u51fa GeoJSON \u6a94\u6848\u3002"}),"\n",(0,n.jsxs)(a.default,{children:[(0,n.jsxs)(l.default,{value:"Overture Maps Explorer",label:"Overture Maps Explorer",default:!0,children:[(0,n.jsxs)(r.p,{children:["\u8981\u5feb\u901f\u67e5\u770b\u548c\u4e0b\u8f09\u9069\u91cf\u7684\u8cc7\u6599\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,n.jsx)(r.a,{href:"https://explore.overturemaps.org/#15.07/41.89731/12.47626",children:"Overture Maps Explorer \u7db2\u7ad9"}),"\u3002"]}),(0,n.jsxs)(r.p,{children:["\u8981\u4e0b\u8f09\u8cc7\u6599\uff1a\u79fb\u52d5\u5230\u60a8\u611f\u8208\u8da3\u7684\u5340\u57df\uff0c\u95dc\u9589\u5176\u4ed6\u5716\u5c64\uff0c\u7136\u5f8c\u9ede\u64ca ",(0,n.jsx)(r.code,{children:"Download Visible"}),"\u3002"]}),(0,n.jsx)(r.p,{children:"\u9019\u6a23\u5c07\u4e0b\u8f09\u60a8\u87a2\u5e55\u4e0a\u53ef\u898b\u7684\u5340\u57df\u3002"})]}),(0,n.jsxs)(l.default,{value:"Python Command-line Tool",label:"Python Command-line Tool",default:!0,children:[(0,n.jsxs)(r.p,{children:["\u9996\u5148\uff0c\u8acb\u6309\u7167 ",(0,n.jsx)(r.a,{href:"/getting-data/overturemaps-py/",children:"Python Command-line Tool\u7684\u5b89\u88dd\u6307\u5357"})," \u9032\u884c\u8a2d\u5b9a\u3002"]}),(0,n.jsxs)(r.p,{children:["\u53ea\u9700\u66f4\u6539 ",(0,n.jsx)(r.code,{children:"bbox"})," \u503c\u4ee5\u4e0b\u8f09\u7279\u5b9a\u5340\u57df\u3002"]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"overturemaps download --bbox=12.46,41.89,12.48,41.91 -f geojson --type=place -o rome.geojson\n"})})]}),(0,n.jsxs)(l.default,{value:"DuckDB",label:"DuckDB",default:!0,children:[(0,n.jsxs)(r.p,{children:["\u9996\u5148\uff0c\u8acb\u6309\u7167 ",(0,n.jsx)(r.a,{href:"/getting-data/duckdb/",children:"DuckDB \u7684\u5b89\u88dd\u6307\u5357"})," \u9032\u884c\u8a2d\u5b9a\u3002"]}),(0,n.jsxs)(r.p,{children:["\u7528\u65b0\u7684 bounding box \u66ff\u63db ",(0,n.jsx)(r.code,{children:"bbox.xmin"})," \u548c ",(0,n.jsx)(r.code,{children:"bbox.ymin"})," \u503c\uff0c\u4ee5\u91dd\u5c0d\u4e0d\u540c\u5340\u57df\u57f7\u884c\u67e5\u8a62\u3002"]}),(0,n.jsx)(i.A,{query:o})]})]}),"\n",(0,n.jsx)(r.h2,{id:"\u8cc7\u6599\u64cd\u4f5c\u8207\u5206\u6790",children:"\u8cc7\u6599\u64cd\u4f5c\u8207\u5206\u6790"}),"\n",(0,n.jsx)(r.h3,{id:"\u6309\u5c6c\u6027\u67e5\u8a62",children:"\u6309\u5c6c\u6027\u67e5\u8a62"}),"\n",(0,n.jsx)(r.p,{children:"\u9019\u4e9b\u7bc4\u4f8b\u4f7f\u7528\u5730\u5740\u3001\u985e\u5225\u548c\u4fe1\u5fc3\u5206\u6578\u5217\u4e2d\u7684\u8cc7\u6599\u5c6c\u6027\uff0c\u4ee5\u4fbf\u901a\u904e DuckDB \u4ee5\u6709\u7528\u7684\u65b9\u5f0f\u904e\u6ffe\u8cc7\u6599\u3002"}),"\n",(0,n.jsxs)(a.default,{children:[(0,n.jsxs)(l.default,{value:"Query by address",label:"\u6309\u5730\u5740\u67e5\u8a62",default:!0,children:[(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"address"})," \u5217\u53ef\u7528\u65bc\u5feb\u901f\u904e\u6ffe\u8cc7\u6599\u5230\u7279\u5b9a\u7684\u653f\u6cbb\u55ae\u4f4d\u3002\u9019\u500b\u4f8b\u5b50\u4f7f\u7528\u570b\u5bb6\u9375\u4f86\u7372\u53d6\u6240\u6709\u5728\u7acb\u9676\u5b9b\u7684\u5730\u5740\u8cc7\u6599\u3002\u5340\u57df\u4e5f\u53ef\u4ee5\u7528\u4f86\u5f9e\u8f03\u5c0f\u7684\u55ae\u4f4d\uff08\u4f8b\u5982\u7f8e\u570b\u5dde\uff09\u4e2d\u63d0\u53d6\u8cc7\u6599\u3002"]}),(0,n.jsx)(i.A,{query:c})]}),(0,n.jsxs)(l.default,{value:"Query by category",label:"\u6309\u985e\u5225\u67e5\u8a62",default:!0,children:[(0,n.jsxs)(r.p,{children:["\u8981\u6309\u7279\u5b9a\u985e\u578b\u7684\u5730\u9ede\u904e\u6ffe\u8cc7\u6599\uff0c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 ",(0,n.jsx)(r.code,{children:"categories"})," \u5217\u3002\u5728\u9019\u500b\u4f8b\u5b50\u4e2d\uff0c\u6211\u5011\u5c07\u63d0\u53d6\u6240\u6709\u985e\u5225\u70ba ",(0,n.jsx)(r.code,{children:"rice_mill"})," \u6216 ",(0,n.jsx)(r.code,{children:"flour_mill"})," \u7684\u5730\u9ede\u3002"]}),(0,n.jsxs)(r.p,{children:["\u5b8c\u6574\u7684\u985e\u5225\u5217\u8868\u53ef\u4ee5\u5728 ",(0,n.jsx)(r.a,{href:"https://github.com/OvertureMaps/schema/blob/main/task-force-docs/places/overture_categories.csv",children:"\u9019\u88e1"})," \u627e\u5230\u3002"]}),(0,n.jsx)(i.A,{query:u})]}),(0,n.jsxs)(l.default,{value:"Query by confidence score",label:"Query by confidence score",default:!0,children:[(0,n.jsxs)(r.p,{children:["\u5047\u8a2d\u60a8\u53ea\u60f3\u8981\u78ba\u5b9a\u5b58\u5728\u4e14\u6e96\u78ba\u7684\u8cc7\u6599\u3002\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 ",(0,n.jsx)(r.code,{children:"confidence"})," \u5206\u6578\u4f86\u904e\u6ffe\u4f4e\u65bc\u67d0\u500b\u95be\u503c\u7684\u8cc7\u6599\uff0c\u4ee5\u6392\u9664\u4efb\u4f55\u53ef\u7591\u8cc7\u6599\u3002"]}),(0,n.jsx)(i.A,{query:h})]})]}),"\n",(0,n.jsx)(r.h3,{id:"\u9032\u968e\u7bc4\u4f8b",children:"\u9032\u968e\u7bc4\u4f8b"}),"\n",(0,n.jsx)(r.p,{children:"\u9019\u4e9b\u7bc4\u4f8b\u5c55\u793a\u4e86\u4e00\u4e9b\u5c07\u5730\u9ede\u8cc7\u6599\u8207\u5176\u4ed6\u8cc7\u6599\u96c6\u7d50\u5408\u7684\u4f7f\u7528\u6848\u4f8b\u3002"}),"\n",(0,n.jsxs)(a.default,{children:[(0,n.jsxs)(l.default,{value:"Conflate with OpenStreetMap",label:"\u8207 OpenStreetMap \u7d50\u5408",default:!0,children:[(0,n.jsx)(r.p,{children:"Overture Places \u53ef\u4ee5\u4f5c\u70ba\u4e00\u500b\u6709\u50f9\u503c\u7684\u4f86\u6e90\uff0c\u7528\u65bc\u8207\u60a8\u73fe\u6709\u7684\u8cc7\u6599\u96c6\u9032\u884c\u7d50\u5408\u6216\u589e\u5f37\u3002"}),(0,n.jsx)(r.p,{children:"\u5728\u9019\u500b\u4f8b\u5b50\u4e2d\uff0c\u5047\u8a2d\u6211\u5011\u5e0c\u671b\u4f7f\u7528 OpenStreetMap \u7684 POI \u9032\u884c\u4e00\u500b\u9805\u76ee\uff0c\u4f46\u5e0c\u671b\u7528 Overture Places \u7684\u8cc7\u6599\u586b\u88dc\u4efb\u4f55\u7f3a\u5931\u7684\u5c6c\u6027\uff0c\u5982\u5730\u5740\u6216\u96fb\u8a71\u865f\u78bc\u3002"}),(0,n.jsx)(r.p,{children:"\u901a\u904e\u4e00\u4e9b\u57fa\u672c\u7684\u5339\u914d\u908f\u8f2f\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u9019\u5169\u500b\u8cc7\u6599\u96c6\u9023\u63a5\u5728\u4e00\u8d77\uff0c\u4ee5\u5275\u5efa\u4e00\u500b\u66f4\u5168\u9762\u7684\u6700\u7d42\u7522\u54c1\u3002\u901a\u904e\u5c07 GERS ID \u4e5f\u9023\u63a5\u5230\u6211\u5011\u7684\u8f38\u51fa\u8cc7\u6599\u96c6\uff0c\u6211\u5011\u53ef\u4ee5\u8f15\u9b06\u5730\u5c07\u73fe\u5728\u5408\u4f75\u7684\u8cc7\u6599\u96c6\u8207\u672a\u4f86\u7684 Overture \u767c\u884c\u7248\u672c\u4fdd\u6301\u540c\u6b65\u3002"}),(0,n.jsxs)(r.p,{children:["\u8981\u81ea\u5df1\u57f7\u884c\u6b64\u7bc4\u4f8b\uff0c\u53ef\u4ee5\u5f9e ",(0,n.jsx)(r.a,{href:"https://download.geofabrik.de/north-america/us/oregon.html",children:"Geofabrik"})," \u7372\u53d6 Oregon \u7684 PBF \u6a94\u6848\u3002"]}),(0,n.jsxs)(r.p,{children:["\u6ce8\u610f\uff1a\u5c07\u5177\u6709 CDLA Permissive 2.0 \u8a31\u53ef\u8b49\u7684\u8cc7\u6599\u8207 OSM \u9032\u884c\u7d50\u5408\u662f\u88ab\u5141\u8a31\u7684\uff0c\u4f46\u7d50\u679c\u8cc7\u6599\u53ef\u80fd\u9700\u8981\u9075\u5faa Open Database License (ODbL) \u5982\u679c\u5b83\u662f\u4e00\u500b\u884d\u751f\u8cc7\u6599\u5eab\u3002\u8acb\u53c3\u95b1 ",(0,n.jsx)(r.a,{href:"https://osmfoundation.org/wiki/Licence/Community_Guidelines/Collective_Database_Guideline_Guideline",children:"OSM Collective Database Guideline"})," \u77ad\u89e3\u66f4\u591a\u8a0a\u606f\u3002"]}),(0,n.jsxs)(x,{children:[(0,n.jsx)("summary",{children:"Query"}),(0,n.jsx)("div",{children:(0,n.jsx)(i.A,{query:p})})]})]}),(0,n.jsxs)(l.default,{value:"Find building addresses",label:"Find building addresses",default:!0,children:[(0,n.jsxs)(r.p,{children:["\u5982\u679c\u60a8\u60f3\u8981\u5c07\u5730\u5740\u8cc7\u6599\u9644\u52a0\u5230\u5efa\u7bc9\u7269\u4e0a\u3002\u53ef\u4ee5\u67e5\u770b ",(0,n.jsx)(r.a,{href:"/schema/reference/addresses/address/",children:"Overture addresses"})," \u4e3b\u984c\uff0c\u4f46\u6211\u5011\u5148\u5047\u8a2d\u5b83\u6c92\u6709\u6db5\u84cb\u60a8\u8981\u627e\u7684\u5340\u57df\u3002"]}),(0,n.jsx)(r.p,{children:"places \u4e3b\u984c\u5177\u6709\u5ee3\u6cdb\u7684\u8986\u84cb\u7bc4\u570d\uff0c\u8a31\u591a\u5730\u9ede\u9ede\u4f4d\u7279\u5fb5\u90fd\u6709\u95dc\u806f\u7684\u5730\u5740\u3002\u901a\u904e\u4f7f\u7528\u4ea4\u96c6\uff0c\u6211\u5011\u53ef\u4ee5\u627e\u5230\u843d\u5728\u5efa\u7bc9\u7269\u5167\u7684\u5730\u9ede\uff0c\u7136\u5f8c\u5c07\u5730\u9ede\u7684\u5730\u5740\u9023\u63a5\u5230\u5efa\u7bc9\u7269\u591a\u908a\u5f62\u4e0a\u3002"}),(0,n.jsxs)(x,{children:[(0,n.jsx)("summary",{children:"Query"}),(0,n.jsx)("div",{children:(0,n.jsx)(i.A,{query:m})})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"\u5957\u4ef6\u548c\u5de5\u5177",children:"\u5957\u4ef6\u548c\u5de5\u5177"}),"\n",(0,n.jsx)(r.h3,{id:"rapid",children:"Rapid"}),"\n",(0,n.jsxs)(r.p,{children:["Rapid \u662f\u4e00\u500b OpenStreetMap \u7de8\u8f2f\u5668\uff0c\u80fd\u5920\u901a\u904e\u53c3\u8003 ",(0,n.jsx)(r.a,{href:"/examples/rapid-id/",children:"\u6b64\u8655\u7684\u6307\u5357"})," \u986f\u793a\u5730\u9ede\u8cc7\u6599\u4f5c\u70ba\u53c3\u8003\u5716\u5c64\u3002"]}),"\n",(0,n.jsx)(r.p,{children:"\u8a72\u6388\u6b0a\u8207 OSM \u517c\u5bb9\uff0c\u9019\u4e9b\u8cc7\u6599\u53ef\u7528\u65bc\u88fd\u4f5c\u5730\u5716\u3002"})]})}function S(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(v,{...e})}):v(e)}},19365:(e,r,s)=>{s.r(r),s.d(r,{default:()=>l});s(96540);var n=s(18215);const t={tabItem:"tabItem_Ymn6"};var a=s(74848);function l(e){let{children:r,hidden:s,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(t.tabItem,l),hidden:s,children:r})}},11470:(e,r,s)=>{s.r(r),s.d(r,{default:()=>A});var n=s(96540),t=s(18215),a=s(23104),l=s(56347),i=s(205),d=s(57485),o=s(31682),c=s(70679);function u(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:r,children:s}=e;return(0,n.useMemo)((()=>{const e=r??function(e){return u(e).map((e=>{let{props:{value:r,label:s,attributes:n,default:t}}=e;return{value:r,label:s,attributes:n,default:t}}))}(s);return function(e){const r=(0,o.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,s])}function p(e){let{value:r,tabValues:s}=e;return s.some((e=>e.value===r))}function m(e){let{queryString:r=!1,groupId:s}=e;const t=(0,l.W6)(),a=function(e){let{queryString:r=!1,groupId:s}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:r,groupId:s});return[(0,d.aZ)(a),(0,n.useCallback)((e=>{if(!a)return;const r=new URLSearchParams(t.location.search);r.set(a,e),t.replace({...t.location,search:r.toString()})}),[a,t])]}function x(e){const{defaultValue:r,queryString:s=!1,groupId:t}=e,a=h(e),[l,d]=(0,n.useState)((()=>function(e){let{defaultValue:r,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=s.find((e=>e.default))??s[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:a}))),[o,u]=m({queryString:s,groupId:t}),[x,j]=function(e){let{groupId:r}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(r),[t,a]=(0,c.Dv)(s);return[t,(0,n.useCallback)((e=>{s&&a.set(e)}),[s,a])]}({groupId:t}),b=(()=>{const e=o??x;return p({value:e,tabValues:a})?e:null})();(0,i.A)((()=>{b&&d(b)}),[b]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);d(e),u(e),j(e)}),[u,j,a]),tabValues:a}}var j=s(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=s(74848);function E(e){let{className:r,block:s,selectedValue:n,selectValue:l,tabValues:i}=e;const d=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),c=e=>{const r=e.currentTarget,s=d.indexOf(r),t=i[s].value;t!==n&&(o(r),l(t))},u=e=>{let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=d.indexOf(e.currentTarget)+1;r=d[s]??d[0];break}case"ArrowLeft":{const s=d.indexOf(e.currentTarget)-1;r=d[s]??d[d.length-1];break}}r?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":s},r),children:i.map((e=>{let{value:r,label:s,attributes:a}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:n===r?0:-1,"aria-selected":n===r,ref:e=>d.push(e),onKeyDown:u,onClick:c,...a,className:(0,t.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":n===r}),children:s??r},r)}))})}function v(e){let{lazy:r,children:s,selectedValue:a}=e;const l=(Array.isArray(s)?s:[s]).filter(Boolean);if(r){const e=l.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:l.map(((e,r)=>(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==a})))})}function S(e){const r=x(e);return(0,f.jsxs)("div",{className:(0,t.A)("tabs-container",b.tabList),children:[(0,f.jsx)(E,{...r,...e}),(0,f.jsx)(v,{...r,...e})]})}function A(e){const r=(0,j.A)();return(0,f.jsx)(S,{...e,children:u(e.children)},String(r))}},97577:(e,r,s)=>{s.d(r,{A:()=>l});var n=s(52364),t=s(44586),a=s(74848);function l(e){const{siteConfig:{customFields:r}}=(0,t.A)();var s=e.query.replace("__OVERTURE_RELEASE",r.overtureRelease);s=(s=s.replace("__ATHENA_OVERTURE_RELEASE","v"+r.overtureRelease.replaceAll(".","_").replaceAll("-","_"))).replace("__PMTILES_OVERTURE_RELEASE",r.overtureRelease.split(".",1));var l=e.language||"sql";return(0,a.jsx)(n.default,{language:l,title:e.title,children:s})}},13460:(e,r,s)=>{s.d(r,{A:()=>n});const n=s.p+"assets/images/places-coverage-e42e20322ffeaf2f9be9cb3f25719635.png"}}]);